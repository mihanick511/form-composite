"use strict";

window.onload = function () {
  mainObj.inition();
};
let mainObj = {
  inition() {
    this.production.initSlider();
  }
};
mainObj.accordeon = {
  show(instance) {
    let accordeon = instance.closest('._accordeon');
    let content = accordeon.querySelector('._accordeonContent');
    let contentHeight = content.querySelector('._contentHeight');
    let arr = instance.querySelector('._accArr');
    if (content.classList.contains('show')) {
      content.classList.remove('show');
      arr.classList.remove('active');
      content.style.height = 0;
    } else {
      content.classList.add('show');
      arr.classList.add('active');
      content.style.height = contentHeight.offsetHeight + 'px';
    }
  }
};
// _contentHeight


mainObj.gPopup = {
  overlay: document.querySelector('._overlay'),
  body: document.querySelector('body'),
  html: document.querySelector('html'),
  val: document.querySelector('._value'),
  clientsCont: [{
    title: 'норникель'
  }, {
    title: 'кольская гмк'
  }, {
    title: 'русГидро'
  }, {
    title: 'фосагро'
  }, {
    title: 'гидроМонтаж'
  }],
  addActionInOpen() {
    this.overlay.classList.add('open');
    this.body.style.overflow = 'hidden';
    this.html.style.overflow = 'hidden';
  },
  open(contentClass, idx) {
    let popupHtml = document.querySelector(contentClass);
    if (idx) this.val.innerHTML = this.clientsCont[idx].title;
    this.addActionInOpen();
    this.overlay.innerHTML = popupHtml.innerHTML;
  },
  close() {
    this.overlay.classList.remove('open');
    this.body.style.overflow = 'auto';
    this.html.style.overflow = 'auto';
    this.val.innerHTML = 'Возможный контент';
  }
};
mainObj.gSlider = {
  initSlider() {
    const swiper = new Swiper('.swiper', {
      // Optional parameters

      // If we need pagination
      pagination: {
        el: '.swiper-pagination',
        type: 'progressbar'
      },
      // Navigation arrows
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
      }

      // And if we need scrollbar
      // scrollbar: {
      // 	el: '.swiper-scrollbar',
      // },
    });
  }
};
mainObj.header = {
  headerWrap: document.querySelector('._headerWrap'),
  show(instance) {
    if (instance.classList.contains('active')) {
      instance.classList.remove('active');
      this.headerWrap.classList.remove('active');
    } else {
      instance.classList.add('active');
      this.headerWrap.classList.add('active');
    }
  }
};
mainObj.news =
// в главном обьекте создаем обьект news
{
  item: document.querySelectorAll('._item'),
  // находим все div item(это массив)
  move()
  //в обьекте news создаем метод move
  {
    for (let i = 1; i < this.item.length; i++)
    //в move с помощью for проходим по массиву item
    {
      let first = this.item[i].querySelectorAll('._wr')[0]; //для выделения нужных нам тегов создаем массив first из 0вых элементов массива item
      this.item[i - 1].innerHTML += first.innerHTML; //оброщаемся к 0му элементу массива item и к 1му с помощью смещения и перекладываем в него внутряк элементов first
      first.remove(); //удаляем ненужные нам блоки из массива first находящиеся в исходных блоках
    }
  }
};
//баг: кнопка срабатывает повторно, return и break не работают
mainObj.production = {
  initSlider() {
    const swiper = new Swiper('._production', {
      // Optional parameters

      // If we need pagination
      pagination: {
        el: '.swiper-pagination',
        type: 'progressbar'
      },
      // Navigation arrows
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
      }

      // And if we need scrollbar
      // scrollbar: {
      // 	el: '.swiper-scrollbar',
      // },
    });
  }
};